#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------

//* c++
#include <list>

////////////////////////////////////////////////////////////////////////////////////////////
// FAmbientProcess class
////////////////////////////////////////////////////////////////////////////////////////////
class FAmbientProcess {
public:

	////////////////////////////////////////////////////////////////////////////////////////////
	// using
	////////////////////////////////////////////////////////////////////////////////////////////

	using Container = std::list<FAmbientProcess*>;
	using Iterator  = Container::iterator;

	////////////////////////////////////////////////////////////////////////////////////////////
	// ProcessContext structure
	////////////////////////////////////////////////////////////////////////////////////////////
	struct ProcessContext {

	};

public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	FAmbientProcess()          = default;
	virtual ~FAmbientProcess() = default;

	//* process *//

	virtual void Process(const ProcessContext& context) = 0;

private:
};
