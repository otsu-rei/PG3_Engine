#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------

//* c++
#include <optional>

//-----------------------------------------------------------------------------------------
// forward
//-----------------------------------------------------------------------------------------
class EditorEngine;

////////////////////////////////////////////////////////////////////////////////////////////
// EngineDeveloperEditor class
////////////////////////////////////////////////////////////////////////////////////////////
class EngineDeveloperEditor {
public:

	//=========================================================================================
	// public method
	//=========================================================================================

	EngineDeveloperEditor()  = default;
	~EngineDeveloperEditor() = default;

	void Init(EditorEngine* editor);

	void Term();

protected:

	//=========================================================================================
	// protected variables
	//=========================================================================================

	//* update state *//

	bool isProcessRequired_ = true; //!< 最終的なプロセス管理

	//! [optional]
	//! nullopt:   通常状態(制限なく更新処理をする)
	//! has_value: 何回更新処理をするか<frame>(0の場合は更新処理を止める)
	std::optional<uint32_t> processLimit_ = std::nullopt;

	//=========================================================================================
	// protected methods
	//=========================================================================================

	//* show imgui component *//

	void ShowProcessMenu();
	void ShowSystemMenu();
	void ShowThreadMenu();

	void ShowPerformanceWindow();

	//* sub method *//

	void BreakPoint();

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	EditorEngine* editor_ = nullptr;

	//=========================================================================================
	// private methods
	//=========================================================================================

	static void MenuDummy();


};
